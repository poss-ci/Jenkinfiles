properties([disableConcurrentBuilds(),  parameters([text(defaultValue: '''x86ub16
x86ub18
x86rh7
x86rh75
ppcub16
ppcub18
ppcrh7
ppcrh75''', description: '', name: 'nodelabels')]), pipelineTriggers([cron('''TZ=Asia/Kolkata
H 8 * * 5''')]), buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '30', numToKeepStr: '15')),])

def labels = nodelabels.split("\\r?\\n")
def builders = [:]
for (x in labels) {
    def label = x
    builders[label] = {
        timeout(600) {
            node(label) {
                if (label == 'ppcrh75') {
                    runStages(label)
                } else {
                    docker.image('base:v1').inside("-v /var/lib/jenkins/.m2/repository:/var/lib/jenkins/.m2/repository:rw,z -v /var/lib/jenkins/.cache:/var/lib/jenkins/.cache:rw,z") {
                        runStages(label)
                    }
                }
            }
        }
    }
}
def runStages(label) {
    stage('Compile ' + label) {
        git branch: 'master', url: 'https://github.com/apache/zeppelin.git'
        sh "git apply /var/lib/jenkins/.m2/repository/patches/zeppelin/*.patch"
        sh '''
            export JAVA_HOME='/usr/lib/jvm/java-1.8.0-openjdk/'
            mvn clean install -DskipTests -Pspark-2.0 -Phadoop-2.7 -Dhadoop.version=2.7.1 -Drat.skip -Dcheckstyle.skip
        '''
    }
    stage('Test ' + label) {
        try {
            sh '''
                export JAVA_HOME='/usr/lib/jvm/java-1.8.0-openjdk/'
                export LANG="en_US.UTF-8"
                export LC_ALL="en_US.UTF-8"
                sh "cd /var/lib/jenkins/.m2/repository/patches/zeppelin/;./ipython_sparkr_dependecy.sh;cd -"
                mvn verify -fn -Pspark-2.0 -Phadoop-2.7 -Dhadoop.version=2.7.1 -Drat.skip -Djava.io.tmpdir=/tmp -Dcheckstyle.skip
            '''
        } finally {
            junit '**/target/surefire-reports/TEST-*.xml'
            archive '**/target/*.jar'
        }
    }
}
parallel builders
