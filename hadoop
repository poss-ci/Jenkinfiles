properties([disableConcurrentBuilds(),  parameters([text(defaultValue: '''x86ub16
x86ub18
x86rh7
x86rh75
ppcub16
ppcub18
ppcrh7
ppcrh75''', description: '', name: 'nodelabels')]), pipelineTriggers([cron('''TZ=Asia/Kolkata
H 19 * * 1''')]), buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '30', numToKeepStr: '15')),])

def labels = nodelabels.split("\\r?\\n")
def builders = [:]
for (x in labels) {
    def label = x
    builders[label] = {
        node(label) {
            if (label.contains('host')) {
                runStages(label)
            } else {
                docker.image('base:v1').inside("-v /var/lib/jenkins/.m2/repository:/var/lib/jenkins/.m2/repository:rw,z") {
                    runStages(label)
                }
            }
        }
    }
}
def runStages(label) {
    stage('Compile ' + label) {
        git branch: 'trunk', url: 'https://github.com/apache/hadoop'
        sh '''
            if [ "ppc64le" = `uname -p` ]
            then
                git apply /var/lib/jenkins/.m2/repository/patches/hadoop/power*.patch
            fi
        '''
        sh '''
            export FINDBUGS_HOME='/opt/findbugs'
            export _JAVA_OPTIONS='-Xmx6g'
            export MAVEN_OPTS='-Xmx4g -Xms128m -XX:ReservedCodeCacheSize=512m -XX:PermSize=1024m -XX:MaxPermSize=1024m'
            export JAVA_HOME='/usr/lib/jvm/java-1.8.0-openjdk/'
            export PATH='/opt/maven/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/opt/phantomjs-1/bin'
            mvn clean install -DskipTests -fn -Pdist,native -Drequire.snappy -Drequire.openssl -Drequire.fuse -Drequire.test.libhadoop -Pyarn-ui 
        '''
    }
    stage('Test ' + label) {
        try {
            sh '''
                export FINDBUGS_HOME='/opt/findbugs'
                export _JAVA_OPTIONS='-Xmx6g'
                export MAVEN_OPTS='-Xmx4g -Xms128m -XX:ReservedCodeCacheSize=512m -XX:PermSize=1024m -XX:MaxPermSize=1024m'
                export JAVA_HOME='/usr/lib/jvm/java-1.8.0-openjdk/'
                export PATH='/opt/maven/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/opt/phantomjs-1/bin'
                mvn test -fn -Pdist,native -Drequire.snappy -Drequire.openssl -Drequire.fuse -Drequire.test.libhadoop -Pyarn-ui
            '''
            sh '''
            echo 'Editing for OOM issue in jenkins..'
            for i in `find -iname TEST-*.xml -exec du -sh {} + | awk '{print $1}' | grep M`
            do
            echo $i
                file=`find -iname TEST-*.xml -exec du -sh {} + | grep $i | awk '{print $2}'`
                sed -i -e '/<system-out>/,/<\\/system-out>/{
                    /<\\/system-out>/i\
                    <system-out>contents replaced by custom script please contact yussuf<\\/system-out>
                    d
                }' $file
            done
            echo 'Done Editing for OOM issue in jenkins..'
            '''
        } finally {
            junit '**/target/surefire-reports/TEST-*.xml'
            archive '**/target/*.jar'
        }
    }
}
parallel builders
