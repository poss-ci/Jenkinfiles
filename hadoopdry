properties([disableConcurrentBuilds(),  parameters([text(defaultValue: '''x86ub16
x86ub18
x86rh7
x86rh75
ppcub16
ppcub18
ppcrh7
ppcrh75''', description: '', name: 'nodelabels')]), pipelineTriggers([cron('''TZ=Asia/Kolkata
H 21 * * 1''')]), buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '30', numToKeepStr: '15')),])

def labels = nodelabels.split("\\r?\\n")
def builders = [:]
for (x in labels) {
    def label = x
    builders[label] = {
        node(label) {
            runStages(label)
        }
    }
}
def runStages(label) {
    stage('Prepare ' + label) {
    }
    stage('Compile ' + label) {
    }
    stage('Test ' + label) {
        try {
            sh '''
                find -iname TEST-*.xml -exec touch {} +
                echo 'Editing for OOM issue in jenkins..'
                for i in `find -iname TEST-*.xml -exec du -sh {} + | awk '{print $1}' | grep M`
                do
                echo $i
                    file=`find -iname TEST-*.xml -exec du -sh {} + | grep $i | awk '{print $2}'`
                    if [ -z "$file" ]
                    then
                        sed -i -e '/<system-out>/,/<\\/system-out>/{
                            /<\\/system-out>/i\
                            <system-out>contents replaced by custom script please contact yussuf<\\/system-out>
                            d
                        }' $file
                    fi
                done
                echo 'Done Editing for OOM issue in jenkins..'
            '''
        } finally {
            junit '**/target/surefire-reports/TEST-*.xml'
            archive '**/target/*.jar'
        }
    }
}
parallel builders
